services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:3000"
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=resume_customizer_dev
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENROUTER_API_KEY=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 # Replace with your real OpenRouter API key
      - SERVICE_URL=http://localhost:8080
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run dev

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=resume_customizer_dev
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OPENROUTER_API_KEY=your-actual-api-key-here # Replace with your real OpenRouter API key
      - SERVICE_URL=http://localhost:8080
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run worker

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=resume_customizer_dev
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
